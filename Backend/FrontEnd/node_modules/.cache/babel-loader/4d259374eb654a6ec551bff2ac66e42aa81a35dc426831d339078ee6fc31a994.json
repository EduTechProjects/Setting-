{"ast":null,"code":"import _slicedToArray from\"/Users/root1/eduproject/Backend/FrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/root1/eduproject/Backend/FrontEnd/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from\"react\";import Button from\".././components/Common/Button\";import styled from\"styled-components\";import Speaker from\"../components/Speak/Speaker\";import{useParams,useNavigate}from\"react-router-dom\";import Questions from\".././utils/Questions\";import ColorCode from\".././utils/Palette\";import{useState,useRef}from\"react\";import axios from\"axios\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var SpeakContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #f5f5f5;\\n  text-align: center;\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n\\n  position: relative;\\n\"])));var QuestionContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: #f5f5f5;\\n  font-weight: bold;\\n  font-size: 30px;\\n  width: 60%;\\n  height: 40px;\\n  text-align: center;\\n  padding-top: 20vh;\\n  margin: 0 auto;\\n  padding-bottom: 20vh;\\n\"])));var ButtonContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding-top: 5vh;\\n  margin: 0 auto;\\n  gap: 30px;\\n  justify-items: flex-start;\\n  display: flex;\\n\"])));var SpeakerWrapper=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n\"])));var Speak=function Speak(){var navigate=useNavigate();var _useParams=useParams(),topic=_useParams.topic;var questionArr=Questions[topic];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFeedbackPage=_useState2[0],setIsFeedbackPage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showSpeaker=_useState4[0],setShowSpeaker=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),currentQuestionIndex=_useState6[0],setCurrentQuestionIndex=_useState6[1];var currentQuestion=questionArr[currentQuestionIndex];var mediaRedorderRef=useRef(null);var audioChunksRef=useRef([]);var handleStartClick=function handleStartClick(){setShowSpeaker(true);//녹음을 시작하기 전 이전에 녹음한 오디오 청크리스트 초기화\naudioChunksRef.current=[];//녹음을 위한 미디어 스트림 가져오기\nnavigator.mediaDevices.getUserMedia({audio:true}).then(function(stream){//MediaRecorder 생성\nmediaRedorderRef.current=new MediaRecorder(stream);//데이터를 받을 때마다 오디오 청크를 추가하기\nmediaRedorderRef.current.addEventListener(\"dataavailable\",function(e){if(e.data.size>0){audioChunksRef.current.push(e.data);}});mediaRedorderRef.current.start();}).catch(function(error){console.error(\"마이크 인식이 불가합니다.\",error);});};var handleDoneClick=function handleDoneClick(){if(mediaRedorderRef.current&&mediaRedorderRef.current.state===\"recording\"){//녹음 중지\nmediaRedorderRef.current.stop();//녹음된 오디로 청크들을 blob으로 변환하기\nvar audioBlob=new Blob(audioChunksRef.current,{type:\"audio/wav\"});//Form data 생성하기\nvar formData=new FormData();formData.append(\"audio\",audioBlob,\"recording.wav\");//서버로 formdata 전송\naxios.post(\"/upload-audio\",formData).then(function(response){console.log(\"업로드가 성공적으로 진행되었습니다!\");}).catch(function(error){console.error(\"업로드 과정 중 오류가 발생했습니다.\",error);});}setShowSpeaker(false);setCurrentQuestionIndex(function(prevIndex){return prevIndex+1;});if(currentQuestionIndex===questionArr.length-1){setIsFeedbackPage(true);}};if(isFeedbackPage){navigate(\"/feedback\");}return/*#__PURE__*/_jsxs(SpeakContainer,{children:[/*#__PURE__*/_jsxs(QuestionContainer,{children:[/*#__PURE__*/_jsxs(\"b\",{style:{color:ColorCode.SelectBlue,marginRight:\"10px\"},children:[\"Q\",currentQuestionIndex+1,\".\"]}),currentQuestion]}),showSpeaker&&/*#__PURE__*/_jsx(SpeakerWrapper,{children:/*#__PURE__*/_jsx(Speaker,{})}),/*#__PURE__*/_jsx(ButtonContainer,{children:showSpeaker?/*#__PURE__*/_jsx(Button,{type:\"3\",text:\"Done\",click:handleDoneClick}):/*#__PURE__*/_jsx(Button,{type:\"2\",text:\"Start\",click:handleStartClick})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDoneClick,children:\"done\"})]});};export default Speak;","map":{"version":3,"names":["React","Button","styled","Speaker","useParams","useNavigate","Questions","ColorCode","useState","useRef","axios","jsxs","_jsxs","jsx","_jsx","SpeakContainer","div","_templateObject","_taggedTemplateLiteral","QuestionContainer","_templateObject2","ButtonContainer","_templateObject3","SpeakerWrapper","_templateObject4","Speak","navigate","_useParams","topic","questionArr","_useState","_useState2","_slicedToArray","isFeedbackPage","setIsFeedbackPage","_useState3","_useState4","showSpeaker","setShowSpeaker","_useState5","_useState6","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","mediaRedorderRef","audioChunksRef","handleStartClick","current","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","addEventListener","e","data","size","push","start","catch","error","console","handleDoneClick","state","stop","audioBlob","Blob","type","formData","FormData","append","post","response","log","prevIndex","length","children","style","color","SelectBlue","marginRight","text","click","onClick"],"sources":["/Users/root1/eduproject/Backend/FrontEnd/src/pages/Speak.js"],"sourcesContent":["import React from \"react\";\nimport Button from \".././components/Common/Button\";\nimport styled from \"styled-components\";\nimport Speaker from \"../components/Speak/Speaker\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Questions from \".././utils/Questions\";\nimport ColorCode from \".././utils/Palette\";\nimport { useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst SpeakContainer = styled.div`\n  background-color: #f5f5f5;\n  text-align: center;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: relative;\n`;\n\nconst QuestionContainer = styled.div`\n  background-color: #f5f5f5;\n  font-weight: bold;\n  font-size: 30px;\n  width: 60%;\n  height: 40px;\n  text-align: center;\n  padding-top: 20vh;\n  margin: 0 auto;\n  padding-bottom: 20vh;\n`;\n\nconst ButtonContainer = styled.div`\n  padding-top: 5vh;\n  margin: 0 auto;\n  gap: 30px;\n  justify-items: flex-start;\n  display: flex;\n`;\n\nconst SpeakerWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Speak = () => {\n  const navigate = useNavigate();\n  const { topic } = useParams();\n\n  const questionArr = Questions[topic];\n  const [isFeedbackPage, setIsFeedbackPage] = useState(false);\n  const [showSpeaker, setShowSpeaker] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const currentQuestion = questionArr[currentQuestionIndex];\n\n  const mediaRedorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const handleStartClick = () => {\n    setShowSpeaker(true);\n\n    //녹음을 시작하기 전 이전에 녹음한 오디오 청크리스트 초기화\n    audioChunksRef.current = [];\n\n    //녹음을 위한 미디어 스트림 가져오기\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        //MediaRecorder 생성\n        mediaRedorderRef.current = new MediaRecorder(stream);\n\n        //데이터를 받을 때마다 오디오 청크를 추가하기\n        mediaRedorderRef.current.addEventListener(\"dataavailable\", (e) => {\n          if (e.data.size > 0) {\n            audioChunksRef.current.push(e.data);\n          }\n        });\n\n        mediaRedorderRef.current.start();\n      })\n      .catch((error) => {\n        console.error(\"마이크 인식이 불가합니다.\", error);\n      });\n  };\n\n  const handleDoneClick = () => {\n    if (\n      mediaRedorderRef.current &&\n      mediaRedorderRef.current.state === \"recording\"\n    ) {\n      //녹음 중지\n      mediaRedorderRef.current.stop();\n\n      //녹음된 오디로 청크들을 blob으로 변환하기\n      const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n\n      //Form data 생성하기\n      const formData = new FormData();\n      formData.append(\"audio\", audioBlob, \"recording.wav\");\n\n      //서버로 formdata 전송\n      axios\n        .post(\"/upload-audio\", formData)\n        .then((response) => {\n          console.log(\"업로드가 성공적으로 진행되었습니다!\");\n        })\n        .catch((error) => {\n          console.error(\"업로드 과정 중 오류가 발생했습니다.\", error);\n        });\n    }\n\n    setShowSpeaker(false);\n    setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n\n    if (currentQuestionIndex === questionArr.length - 1) {\n      setIsFeedbackPage(true);\n    }\n  };\n\n  if (isFeedbackPage) {\n    navigate(\"/feedback\");\n  }\n\n  return (\n    <SpeakContainer>\n      <QuestionContainer>\n        <b style={{ color: ColorCode.SelectBlue, marginRight: \"10px\" }}>\n          Q{currentQuestionIndex + 1}.\n        </b>\n        {currentQuestion}\n      </QuestionContainer>\n      {showSpeaker && (\n        <SpeakerWrapper>\n          <Speaker />\n        </SpeakerWrapper>\n      )}\n      <ButtonContainer>\n        {showSpeaker ? (\n          <Button type={\"3\"} text={\"Done\"} click={handleDoneClick} />\n        ) : (\n          <Button type={\"2\"} text={\"Start\"} click={handleStartClick} />\n        )}\n      </ButtonContainer>\n      <button onClick={handleDoneClick}>done</button>\n    </SpeakContainer>\n  );\n};\n\nexport default Speak;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}