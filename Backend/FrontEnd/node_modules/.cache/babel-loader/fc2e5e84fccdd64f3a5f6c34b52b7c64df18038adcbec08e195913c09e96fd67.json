{"ast":null,"code":"var _jsxFileName = \"/Users/root1/eduproject/Backend/FrontEnd/src/pages/Speak.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Button from \".././components/Common/Button\";\nimport styled from \"styled-components\";\nimport Speaker from \"../components/Speak/Speaker\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Questions from \".././utils/Questions\";\nimport ColorCode from \".././utils/Palette\";\nimport { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeakContainer = styled.div`\n  background-color: #f5f5f5;\n  text-align: center;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: relative;\n`;\n_c = SpeakContainer;\nconst QuestionContainer = styled.div`\n  background-color: #f5f5f5;\n  font-weight: bold;\n  font-size: 30px;\n  width: 60%;\n  height: 40px;\n  text-align: center;\n  padding-top: 20vh;\n  margin: 0 auto;\n  padding-bottom: 20vh;\n`;\n_c2 = QuestionContainer;\nconst ButtonContainer = styled.div`\n  padding-top: 5vh;\n  margin: 0 auto;\n  gap: 30px;\n  justify-items: flex-start;\n  display: flex;\n`;\n_c3 = ButtonContainer;\nconst SpeakerWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n_c4 = SpeakerWrapper;\nconst Speak = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    topic\n  } = useParams();\n  const questionArr = Questions[topic];\n  const [isFeedbackPage, setIsFeedbackPage] = useState(false);\n  const [showSpeaker, setShowSpeaker] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const currentQuestion = questionArr[currentQuestionIndex];\n  const mediaRedorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStartClick = () => {\n    setShowSpeaker(true);\n\n    //녹음을 시작하기 전 이전에 녹음한 오디오 청크리스트 초기화\n    audioChunksRef.current = [];\n\n    //녹음을 위한 미디어 스트림 가져오기\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      //MediaRecorder 생성\n      mediaRedorderRef.current = new MediaRecorder(stream);\n\n      //데이터를 받을 때마다 오디오 청크를 추가하기\n      mediaRedorderRef.current.addEventListener(\"dataavailable\", e => {\n        if (e.data.size > 0) {\n          audioChunksRef.current.push(e.data);\n        }\n      });\n      mediaRedorderRef.current.start();\n    }).catch(error => {\n      console.error(\"마이크 인식이 불가합니다.\", error);\n    });\n  };\n  const handleDoneClick = () => {\n    if (mediaRedorderRef.current && mediaRedorderRef.current.state === \"recording\") {\n      //녹음 중지\n      mediaRedorderRef.current.stop();\n\n      //녹음된 오디로 청크들을 blob으로 변환하기\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n\n      //Form data 생성하기\n      const formData = new FormData();\n      formData.append(\"audio\", audioBlob, \"recording.wav\");\n\n      //서버로 formdata 전송\n      axios.post(\"http://localhost:5000/transcribe\", formData).then(response => {\n        console.log(\"업로드가 성공적으로 진행되었습니다!\");\n        // 서버에서 응답받은 텍스트를 처리하는 코드 작성\n        const transcription = response.data.transcription;\n        // transcription을 처리하는 로직 추가\n      }).catch(error => {\n        console.error(\"업로드 과정 중 오류가 발생했습니다.\", error);\n      });\n    }\n    setShowSpeaker(false);\n    setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    if (currentQuestionIndex === questionArr.length - 1) {\n      setIsFeedbackPage(true);\n    }\n  };\n  if (isFeedbackPage) {\n    navigate(\"/feedback\");\n  }\n  return /*#__PURE__*/_jsxDEV(SpeakContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          color: ColorCode.SelectBlue,\n          marginRight: \"10px\"\n        },\n        children: [\"Q\", currentQuestionIndex + 1, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), currentQuestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), showSpeaker && /*#__PURE__*/_jsxDEV(SpeakerWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Speaker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: showSpeaker ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"3\",\n        text: \"Done\",\n        click: handleDoneClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"2\",\n        text: \"Start\",\n        click: handleStartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDoneClick,\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Speak, \"SIyr+SYyzxKz22FUAepvPsPsAHE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c5 = Speak;\nexport default Speak;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SpeakContainer\");\n$RefreshReg$(_c2, \"QuestionContainer\");\n$RefreshReg$(_c3, \"ButtonContainer\");\n$RefreshReg$(_c4, \"SpeakerWrapper\");\n$RefreshReg$(_c5, \"Speak\");","map":{"version":3,"names":["React","Button","styled","Speaker","useParams","useNavigate","Questions","ColorCode","useState","useRef","axios","jsxDEV","_jsxDEV","SpeakContainer","div","_c","QuestionContainer","_c2","ButtonContainer","_c3","SpeakerWrapper","_c4","Speak","_s","navigate","topic","questionArr","isFeedbackPage","setIsFeedbackPage","showSpeaker","setShowSpeaker","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","mediaRedorderRef","audioChunksRef","handleStartClick","current","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","addEventListener","e","data","size","push","start","catch","error","console","handleDoneClick","state","stop","audioBlob","Blob","type","formData","FormData","append","post","response","log","transcription","prevIndex","length","children","style","color","SelectBlue","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","text","click","onClick","_c5","$RefreshReg$"],"sources":["/Users/root1/eduproject/Backend/FrontEnd/src/pages/Speak.js"],"sourcesContent":["import React from \"react\";\nimport Button from \".././components/Common/Button\";\nimport styled from \"styled-components\";\nimport Speaker from \"../components/Speak/Speaker\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Questions from \".././utils/Questions\";\nimport ColorCode from \".././utils/Palette\";\nimport { useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst SpeakContainer = styled.div`\n  background-color: #f5f5f5;\n  text-align: center;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: relative;\n`;\n\nconst QuestionContainer = styled.div`\n  background-color: #f5f5f5;\n  font-weight: bold;\n  font-size: 30px;\n  width: 60%;\n  height: 40px;\n  text-align: center;\n  padding-top: 20vh;\n  margin: 0 auto;\n  padding-bottom: 20vh;\n`;\n\nconst ButtonContainer = styled.div`\n  padding-top: 5vh;\n  margin: 0 auto;\n  gap: 30px;\n  justify-items: flex-start;\n  display: flex;\n`;\n\nconst SpeakerWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Speak = () => {\n  const navigate = useNavigate();\n  const { topic } = useParams();\n\n  const questionArr = Questions[topic];\n  const [isFeedbackPage, setIsFeedbackPage] = useState(false);\n  const [showSpeaker, setShowSpeaker] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const currentQuestion = questionArr[currentQuestionIndex];\n\n  const mediaRedorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const handleStartClick = () => {\n    setShowSpeaker(true);\n\n    //녹음을 시작하기 전 이전에 녹음한 오디오 청크리스트 초기화\n    audioChunksRef.current = [];\n\n    //녹음을 위한 미디어 스트림 가져오기\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        //MediaRecorder 생성\n        mediaRedorderRef.current = new MediaRecorder(stream);\n\n        //데이터를 받을 때마다 오디오 청크를 추가하기\n        mediaRedorderRef.current.addEventListener(\"dataavailable\", (e) => {\n          if (e.data.size > 0) {\n            audioChunksRef.current.push(e.data);\n          }\n        });\n\n        mediaRedorderRef.current.start();\n      })\n      .catch((error) => {\n        console.error(\"마이크 인식이 불가합니다.\", error);\n      });\n  };\n\n  const handleDoneClick = () => {\n    if (\n      mediaRedorderRef.current &&\n      mediaRedorderRef.current.state === \"recording\"\n    ) {\n      //녹음 중지\n      mediaRedorderRef.current.stop();\n\n      //녹음된 오디로 청크들을 blob으로 변환하기\n      const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n\n      //Form data 생성하기\n      const formData = new FormData();\n      formData.append(\"audio\", audioBlob, \"recording.wav\");\n\n      //서버로 formdata 전송\n      axios\n        .post(\"http://localhost:5000/transcribe\", formData)\n        .then((response) => {\n          console.log(\"업로드가 성공적으로 진행되었습니다!\");\n          // 서버에서 응답받은 텍스트를 처리하는 코드 작성\n          const transcription = response.data.transcription;\n          // transcription을 처리하는 로직 추가\n        })\n        .catch((error) => {\n          console.error(\"업로드 과정 중 오류가 발생했습니다.\", error);\n        });\n    }\n\n    setShowSpeaker(false);\n    setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n\n    if (currentQuestionIndex === questionArr.length - 1) {\n      setIsFeedbackPage(true);\n    }\n  };\n\n  if (isFeedbackPage) {\n    navigate(\"/feedback\");\n  }\n\n  return (\n    <SpeakContainer>\n      <QuestionContainer>\n        <b style={{ color: ColorCode.SelectBlue, marginRight: \"10px\" }}>\n          Q{currentQuestionIndex + 1}.\n        </b>\n        {currentQuestion}\n      </QuestionContainer>\n      {showSpeaker && (\n        <SpeakerWrapper>\n          <Speaker />\n        </SpeakerWrapper>\n      )}\n      <ButtonContainer>\n        {showSpeaker ? (\n          <Button type={\"3\"} text={\"Done\"} click={handleDoneClick} />\n        ) : (\n          <Button type={\"2\"} text={\"Start\"} click={handleStartClick} />\n        )}\n      </ButtonContainer>\n      <button onClick={handleDoneClick}>done</button>\n    </SpeakContainer>\n  );\n};\n\nexport default Speak;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}